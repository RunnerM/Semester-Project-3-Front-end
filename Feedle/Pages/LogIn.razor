@page "/LogIn"
@using Feedle.Authentication
@using Feedle.Data

@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject NavigationManager NavigationManager;
@inject BlazorTimer Timer

<div class="text-center">
    <AuthorizeView>
        <NotAuthorized>
            <div class="form-signin">
                <img class="mb-4" src="extra/9742 feedle_RB_1.png" alt width="72">
                <h1 class="h3 mb-3 font-weight-normal">Please sign in</h1>
                <label for="inputEmail" class="sr-only">Email address</label>
                <input @bind-value="username" type="text" class="form-control" placeholder="Username" required="" autofocus="">
                <label for="inputPassword" class="sr-only">Password</label>
                <input @bind-value="password" type="password" id="inputPassword" class="form-control" placeholder="Password" required="">


                <div>@errorMessage</div>
                <button @onclick="PerformLogin" class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>
                <p>or <a href="SignUp">sign up</a> instead</p>
            </div>
        </NotAuthorized>
        <Authorized>
            <p class="text-muted">
                You are logged in.
            </p>
            <p class="text-muted">Redirecting to front page in 2 seconds ...</p>
        </Authorized>
    </AuthorizeView>
</div>
@* <AuthorizeView> *@
@*     <NotAuthorized> *@
@*         <div class="form-group"> *@
@*             <label>User name:</label> *@
@*             <input type="text" placeholder="user name" @bind-value="username"/> *@
@*         </div> *@
@*         <div class="form-group"> *@
@*             <label>Password</label> *@
@*             <input type="password" placeholder="password" @bind-value="password"/> *@
@*         </div> *@
@*         <div style="color:red">@errorMessage</div> *@
@* *@
@*         <a href="" @onclick="PerformLogin"> *@
@*             Login *@
@*         </a> *@
@*     </NotAuthorized> *@
@*     <Authorized> *@
@*         <a href="" @onclick="PerformLogout"> *@
@*             Log out *@
@*         </a> *@
@*     </Authorized> *@
@* </AuthorizeView> *@

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            StartTimer();
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }


    public async Task PerformLogout()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
        }
    }

    //timer
    private void StartTimer()
    {
        Timer.SetTimer(2500);
        Timer.OnElapsed += TimerElapsedHandler;
    }

    private void TimerElapsedHandler()
    {
        NavigationManager.NavigateTo("/");
    }

}